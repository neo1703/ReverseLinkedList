import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;

public class MainClass {
    static class Node
    {
        Object data;
        Node next;
    };
    static Node newNode(Object d)
    {
        Node newnode = new Node();
        newnode.data = d;
        newnode.next = null;
        return newnode;
    }
    static Node reverse(Node head, Node prev)
    {
        if (head == null)
            return null;

        Node temp;
        Node curr;
        curr = head;
        while (curr != null && ((int)curr.data) % 2 == 0)
        {
            temp = curr.next;
            curr.next = prev;
            prev = curr;
            curr = temp;
        }
        if (curr != head)
        {
            head.next = curr;
            curr = reverse(curr, null);
            return prev;
        }

        else
        {
            head.next = reverse(head.next, head);
            return head;
        }
    }


    static void printLinkedList(Node head)
    {
        while (head != null)
        {
           System.out.print(head.data + " ");
            head = head.next;
        }
    }

    public static void main(String[] args) throws IOException {
        BufferedReader sb=new BufferedReader(new InputStreamReader(System.in));
        String str=sb.readLine();
        str+=" ";
        int length=str.length();
        int[] arr=new int[length];
        String temp=new String();
        int n=0;
        for(int i=0;i<length;i++){
            if(str.charAt(i)!=' '){
                temp+=str.charAt(i);
            }
            if(str.charAt(i)==' '){
                arr[n++]=Integer.parseInt(temp);
                //System.out.print(arr[n-1]);System.out.print(" , ");
                temp="";
            }
        }

        Node head = null;
        Node p = new Node();
        for (int i = 0; i < n; i++)
        {
            if (head == null)
            {
                p = newNode(arr[i]);
                head = p;
                continue;
            }
            p.next = newNode(arr[i]);
            p = p.next;
        }
        head = reverse(head, null);
        printLinkedList(head);
    }
}
